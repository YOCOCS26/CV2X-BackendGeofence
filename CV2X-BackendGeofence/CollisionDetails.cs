// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CollisionDetails.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from CollisionDetails.proto</summary>
public static partial class CollisionDetailsReflection {

  #region Descriptor
  /// <summary>File descriptor for CollisionDetails.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CollisionDetailsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZDb2xsaXNpb25EZXRhaWxzLnByb3RvIoMBCg1Db2xsaXNpb25EYXRhEhIK",
          "CnZlaGljbGVfaWQYASABKAkSFQoNcGVkZXN0cmlhbl9pZBgCIAEoCRIYChBj",
          "b2xsaXNpb25fc3RhdHVzGAMgASgFEhAKCGRpc3RhbmNlGAQgASgBEhsKE3Bl",
          "ZGVzdHJpYW5fcG9zaXRpb24YBSABKAVCHAoIcHJvdG9idWZCEENvbGxpc2lv",
          "bkRldGFpbHNiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CollisionData), global::CollisionData.Parser, new[]{ "VehicleId", "PedestrianId", "CollisionStatus", "Distance", "PedestrianPosition" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CollisionData : pb::IMessage<CollisionData> {
  private static readonly pb::MessageParser<CollisionData> _parser = new pb::MessageParser<CollisionData>(() => new CollisionData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CollisionData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CollisionDetailsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CollisionData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CollisionData(CollisionData other) : this() {
    vehicleId_ = other.vehicleId_;
    pedestrianId_ = other.pedestrianId_;
    collisionStatus_ = other.collisionStatus_;
    distance_ = other.distance_;
    pedestrianPosition_ = other.pedestrianPosition_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CollisionData Clone() {
    return new CollisionData(this);
  }

  /// <summary>Field number for the "vehicle_id" field.</summary>
  public const int VehicleIdFieldNumber = 1;
  private string vehicleId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VehicleId {
    get { return vehicleId_; }
    set {
      vehicleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pedestrian_id" field.</summary>
  public const int PedestrianIdFieldNumber = 2;
  private string pedestrianId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PedestrianId {
    get { return pedestrianId_; }
    set {
      pedestrianId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "collision_status" field.</summary>
  public const int CollisionStatusFieldNumber = 3;
  private int collisionStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CollisionStatus {
    get { return collisionStatus_; }
    set {
      collisionStatus_ = value;
    }
  }

  /// <summary>Field number for the "distance" field.</summary>
  public const int DistanceFieldNumber = 4;
  private double distance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Distance {
    get { return distance_; }
    set {
      distance_ = value;
    }
  }

  /// <summary>Field number for the "pedestrian_position" field.</summary>
  public const int PedestrianPositionFieldNumber = 5;
  private int pedestrianPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PedestrianPosition {
    get { return pedestrianPosition_; }
    set {
      pedestrianPosition_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CollisionData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CollisionData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (VehicleId != other.VehicleId) return false;
    if (PedestrianId != other.PedestrianId) return false;
    if (CollisionStatus != other.CollisionStatus) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Distance, other.Distance)) return false;
    if (PedestrianPosition != other.PedestrianPosition) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (VehicleId.Length != 0) hash ^= VehicleId.GetHashCode();
    if (PedestrianId.Length != 0) hash ^= PedestrianId.GetHashCode();
    if (CollisionStatus != 0) hash ^= CollisionStatus.GetHashCode();
    if (Distance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Distance);
    if (PedestrianPosition != 0) hash ^= PedestrianPosition.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (VehicleId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(VehicleId);
    }
    if (PedestrianId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PedestrianId);
    }
    if (CollisionStatus != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CollisionStatus);
    }
    if (Distance != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(Distance);
    }
    if (PedestrianPosition != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(PedestrianPosition);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (VehicleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleId);
    }
    if (PedestrianId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PedestrianId);
    }
    if (CollisionStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CollisionStatus);
    }
    if (Distance != 0D) {
      size += 1 + 8;
    }
    if (PedestrianPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PedestrianPosition);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CollisionData other) {
    if (other == null) {
      return;
    }
    if (other.VehicleId.Length != 0) {
      VehicleId = other.VehicleId;
    }
    if (other.PedestrianId.Length != 0) {
      PedestrianId = other.PedestrianId;
    }
    if (other.CollisionStatus != 0) {
      CollisionStatus = other.CollisionStatus;
    }
    if (other.Distance != 0D) {
      Distance = other.Distance;
    }
    if (other.PedestrianPosition != 0) {
      PedestrianPosition = other.PedestrianPosition;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          VehicleId = input.ReadString();
          break;
        }
        case 18: {
          PedestrianId = input.ReadString();
          break;
        }
        case 24: {
          CollisionStatus = input.ReadInt32();
          break;
        }
        case 33: {
          Distance = input.ReadDouble();
          break;
        }
        case 40: {
          PedestrianPosition = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
